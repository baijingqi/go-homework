// Code generated by entc, DO NOT EDIT.

package ent

import (
	"comment/ent/comment"
	"comment/ent/commentcount"
	"comment/ent/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	commentFields := schema.Comment{}.Fields()
	_ = commentFields
	// commentDescUID is the schema descriptor for uid field.
	commentDescUID := commentFields[1].Descriptor()
	// comment.UIDValidator is a validator for the "uid" field. It is called by the builders before save.
	comment.UIDValidator = commentDescUID.Validators[0].(func(uint64) error)
	// commentDescRelationID is the schema descriptor for relation_id field.
	commentDescRelationID := commentFields[2].Descriptor()
	// comment.RelationIDValidator is a validator for the "relation_id" field. It is called by the builders before save.
	comment.RelationIDValidator = func() func(uint64) error {
		validators := commentDescRelationID.Validators
		fns := [...]func(uint64) error{
			validators[0].(func(uint64) error),
			validators[1].(func(uint64) error),
		}
		return func(relation_id uint64) error {
			for _, fn := range fns {
				if err := fn(relation_id); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// commentDescReplyToUID is the schema descriptor for reply_to_uid field.
	commentDescReplyToUID := commentFields[3].Descriptor()
	// comment.DefaultReplyToUID holds the default value on creation for the reply_to_uid field.
	comment.DefaultReplyToUID = commentDescReplyToUID.Default.(uint64)
	// commentDescRelationType is the schema descriptor for relation_type field.
	commentDescRelationType := commentFields[4].Descriptor()
	// comment.RelationTypeValidator is a validator for the "relation_type" field. It is called by the builders before save.
	comment.RelationTypeValidator = commentDescRelationType.Validators[0].(func(uint32) error)
	// commentDescParentID is the schema descriptor for parent_id field.
	commentDescParentID := commentFields[5].Descriptor()
	// comment.DefaultParentID holds the default value on creation for the parent_id field.
	comment.DefaultParentID = commentDescParentID.Default.(uint64)
	// comment.ParentIDValidator is a validator for the "parent_id" field. It is called by the builders before save.
	comment.ParentIDValidator = commentDescParentID.Validators[0].(func(uint64) error)
	// commentDescBelongCommentID is the schema descriptor for belong_comment_id field.
	commentDescBelongCommentID := commentFields[6].Descriptor()
	// comment.DefaultBelongCommentID holds the default value on creation for the belong_comment_id field.
	comment.DefaultBelongCommentID = commentDescBelongCommentID.Default.(uint64)
	// commentDescContent is the schema descriptor for content field.
	commentDescContent := commentFields[7].Descriptor()
	// comment.DefaultContent holds the default value on creation for the content field.
	comment.DefaultContent = commentDescContent.Default.(string)
	// commentDescCreatedAt is the schema descriptor for created_at field.
	commentDescCreatedAt := commentFields[8].Descriptor()
	// comment.DefaultCreatedAt holds the default value on creation for the created_at field.
	comment.DefaultCreatedAt = commentDescCreatedAt.Default.(func() time.Time)
	// commentDescUpdatedAt is the schema descriptor for updated_at field.
	commentDescUpdatedAt := commentFields[9].Descriptor()
	// comment.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	comment.DefaultUpdatedAt = commentDescUpdatedAt.Default.(func() time.Time)
	// commentDescID is the schema descriptor for id field.
	commentDescID := commentFields[0].Descriptor()
	// comment.IDValidator is a validator for the "id" field. It is called by the builders before save.
	comment.IDValidator = commentDescID.Validators[0].(func(uint64) error)
	commentcountFields := schema.CommentCount{}.Fields()
	_ = commentcountFields
	// commentcountDescPraiseNum is the schema descriptor for praise_num field.
	commentcountDescPraiseNum := commentcountFields[1].Descriptor()
	// commentcount.DefaultPraiseNum holds the default value on creation for the praise_num field.
	commentcount.DefaultPraiseNum = commentcountDescPraiseNum.Default.(uint32)
	// commentcountDescReplyNum is the schema descriptor for reply_num field.
	commentcountDescReplyNum := commentcountFields[2].Descriptor()
	// commentcount.DefaultReplyNum holds the default value on creation for the reply_num field.
	commentcount.DefaultReplyNum = commentcountDescReplyNum.Default.(uint32)
	// commentcountDescDislikeNum is the schema descriptor for dislike_num field.
	commentcountDescDislikeNum := commentcountFields[3].Descriptor()
	// commentcount.DefaultDislikeNum holds the default value on creation for the dislike_num field.
	commentcount.DefaultDislikeNum = commentcountDescDislikeNum.Default.(uint32)
	// commentcountDescCreatedAt is the schema descriptor for created_at field.
	commentcountDescCreatedAt := commentcountFields[4].Descriptor()
	// commentcount.DefaultCreatedAt holds the default value on creation for the created_at field.
	commentcount.DefaultCreatedAt = commentcountDescCreatedAt.Default.(func() time.Time)
	// commentcountDescUpdatedAt is the schema descriptor for updated_at field.
	commentcountDescUpdatedAt := commentcountFields[5].Descriptor()
	// commentcount.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	commentcount.DefaultUpdatedAt = commentcountDescUpdatedAt.Default.(func() time.Time)
	// commentcountDescID is the schema descriptor for id field.
	commentcountDescID := commentcountFields[0].Descriptor()
	// commentcount.IDValidator is a validator for the "id" field. It is called by the builders before save.
	commentcount.IDValidator = commentcountDescID.Validators[0].(func(uint64) error)
}
